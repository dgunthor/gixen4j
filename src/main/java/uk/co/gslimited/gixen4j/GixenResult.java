package uk.co.gslimited.gixen4j;

import lombok.Getter;

public enum GixenResult {

	OK(200, "OK"),
	ERROR_INTERNAL_GIXEN4J_ERROR(500, "ERROR (500): INTERNAL GIXEN4J ERROR"),
	ERROR_SSL_REQUIRED(501, "ERROR (501): SSL REQUIRED"),
	ERROR_COULD_NOT_LOGIN_100(100, "ERROR (100): COULD NOT LOG IN"),
	ERROR_COULD_NOT_LOGIN_101(101, "ERROR (101): COULD NOT LOG IN"),
	ERROR_COULD_NOT_LOGIN_USE_WEB_INTERFACE_FIRST(171, "ERROR (171): COULD NOT LOG IN: USE WEB INTERFACE FIRST"),
	ERROR_GIXEN_DOWN(1001, "ERROR (1001): GIXEN DOWN"),
	ERROR_NON_SUBSCRIBER(111, "(111): NON SUBSCRIBER"),
	ERROR_GIXEN_ACCOUNT_SUSPENDED(115, "ERROR (115): GIXEN ACCOUNT SUSPENDED"),
	ERROR_DELETE_QUERY_FAILED_771(771, "ERROR (771): DELETE QUERY FAILED"),
	ERROR_DELETE_QUERY_FAILED_772(772, "ERROR (772): DELETE QUERY FAILED"),
	ERROR_USERNAME_NOT_SPECIFIED(131, "ERROR (131): USERNAME NOT SPECIFIED"),
	ERROR_PASSWORD_NOT_SPECIFIED(132, "ERROR (132): PASSWORD NOT SPECIFIED"),
	ERROR_MAXIMUM_BID_NOT_SPECIFIED(133, "ERROR (133): MAXIMUM BID NOT SPECIFIED"),
	ERROR_MAXIMUM_NUMBER_OF_SNIPES_EXCEEDED(201, "ERROR (201): MAXIMUM NUMBER OF SNIPES EXCEEDED"),
	ERROR_ITEM_ALREADY_PRESENT(202, "ERROR (202): ITEM ALREADY PRESENT"),
	ERROR_COULD_NOT_GET_INFO_FOR_ITEM(203, "ERROR (203): COULD NOT GET INFO FOR ITEM"),
	ERROR_AUCTION_OR_MONEY_INAVLID_FORMAT(301, "ERROR (301): COULD NOT ADD SNIPE: AUCTION NUMBER OR MONEY FORMAT INVALID"),
	ERROR_COULD_NOT_ADD_SNIPE_TO_MIRROR_302(302, "ERROR (302): COULD NOT ADD SNIPE TO MIRROR"),
	ERROR_COULD_NOT_ADD_SNIPE_TO_MIRROR_304(304, "ERROR (304): COULD NOT ADD SNIPE TO MIRROR"),
	ERROR_EMPTY_USERNAME_OR_PASSWORD(401, "ERROR (401): EMPTY USERNAME OR EMPTY PASSWORD"),
	ERROR_DELETE_QUERY_FAILED_241(241, "ERROR (241): DELETE QUERY FAILED"),
	ERROR_DELETE_QUERY_FAILED_242(242, "ERROR (242): DELETE QUERY FAILED");

	@Getter
	private final int code;

	@Getter
	private final String message;

	private GixenResult(int code, String message) {
		this.code = code;
		this.message = message;
	}

	public static GixenResult parse(String message) {
		for (GixenResult error : values()) {
			if (error.getMessage().equals(message)) {
				return error;
			}
		}

		return null;
	}
}

